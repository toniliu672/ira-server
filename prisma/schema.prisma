// prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
  binaryTargets = ["native", "debian-openssl-1.1.x"]
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Admin {
  id        String   @id @default(uuid()) @map("_id")
  username  String   @unique
  name      String
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("admins")
}

enum Gender {
  MALE
  FEMALE
}

model Student {
  id             String         @id @default(uuid()) @map("_id")
  username       String         @unique
  email          String         @unique
  password       String
  fullName       String
  gender         Gender
  phone          String?
  address        String?
  activeStatus   Boolean        @default(true)
  deviceId       String?        // For mobile app authentication
  lastLogin      DateTime?
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt

  @@map("students")
}

model Materi {
  id                   String        @id @default(auto()) @map("_id") @db.ObjectId
  judul                String        @unique
  tujuanPembelajaran   String[]     
  capaianPembelajaran  String[]     
  deskripsi            String?      
  thumbnailUrl         String?      
  urutan               Int          
  status               Boolean      @default(true)
  subMateri            SubMateri[]  
  videoMateri          VideoMateri[] 

  @@map("materi")
  @@index([judul, status])
}

model SubMateri {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  judul       String   
  konten      String   
  imageUrls   String[] 
  urutan      Int      
  status      Boolean  @default(true)
  materiId    String   @db.ObjectId
  materiRef   Materi   @relation(fields: [materiId], references: [id], onDelete: Cascade)

  @@map("sub_materi")
  @@index([materiId, status])
}

model VideoMateri {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  judul       String
  deskripsi   String?
  videoUrl    String   
  thumbnailUrl String? 
  durasi      Int     
  urutan      Int     
  status      Boolean @default(true)
  materiId    String  @db.ObjectId
  materiRef   Materi  @relation(fields: [materiId], references: [id], onDelete: Cascade)

  @@map("video_materi")
  @@index([materiId, status])
}